# This is a basic workflow to help you get started with Actions

name: VCPI-Cockpit-BE-CI

# Controls when the workflow will run
on:
  push:
    branches: [ "master"]

    

env:
  # Variables needed to build and push the image
  WORKING_DIC: VCPI-Cockpit-BE
  GHP_IMAGE_NAME: vcpi-cockpit-be




# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on:
      - ubuntu-latest

    outputs:
      IMAGE_NAME: ${{ steps.setup.outputs.IMAGE_NAME }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of SonarQube reporting
          fetch-depth: 0
 
      # set up image name
      - name: set up image name
        id: setup
        run: |
          GHE_URL=${{ github.server_url }}/$(echo ${{ github.repository }} | awk '{print tolower($0)}')
          REGISTRY=$(sed 's/https:\/\//docker\./' <<< $GHE_URL)
          echo "::set-output name=REGISTRY::$REGISTRY"
          echo "::set-output name=IMAGE_NAME::$REGISTRY/${{ env.GHP_IMAGE_NAME }}"
      # login to GitHub Packages
      - name: Login to Github Packages
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ steps.setup.outputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Set up Docker environment
      - name: set up qemu
        uses: docker/setup-qemu-action@v1
      - name: set up Docker context for buildx
        id: buildx-context
        run: |
          docker context create builders
      - uses: docker/setup-buildx-action@v1.6.0
        id: buildx
        with:
          version: latest
          endpoint: builders
